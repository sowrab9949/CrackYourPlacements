# 287. Find the Duplicate Number
#  This could be solved by hash map but taking O(n) space or through linked list cycle
#  The first approach is to identify the cycle as it is cycle linked list. so it's the approch
#  for floyd algo------------ BEGGINING OF CYCLE DETECTION.
class Solution:
    def findDuplicate(self, nums: List[int]) -> int:
        slow, fast = 0, 0
        while True:
            slow = nums[slow]
            fast = nums[nums[fast]]
            if slow == fast:
                break

        slow2 = 0
        while True:
            slow = nums[slow]
            slow2 = nums[slow2]
            if slow == slow2:
                return slow


# 75. Sort Colors

